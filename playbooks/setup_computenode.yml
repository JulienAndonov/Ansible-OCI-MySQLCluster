---

- hosts: localhost
  collections:
    - oracle.oci
  vars_files:
    - ../variables.yml
  tasks:
    - block:
      - name: Get Running Instance ID
        oci_compute_instance_facts:
          compartment_id: "{{ instance_compartment }}"
          lifecycle_state: "RUNNING"
        register: instance_facts

      - name: Launch an instance
        oci_compute_instance:
          availability_domain: "{{ instance_ad }}"
          compartment_id: "{{ instance_compartment }}"
          name: "{{ hostname }}"
          image_id: "{{ instance_image }}"
          shape: "{{ instance_shape }}"
          shape_config:
            baseline_ocpu_utilization: "BASELINE_1_1"
            memory_in_gbs: 8.0
            ocpus: 1.0
          instance_options:
            are_legacy_imds_endpoints_disabled: yes
          create_vnic_details:
              assign_public_ip: false
              subnet_id: "{{ instance_subnet_id }}"
          metadata:
              ssh_authorized_keys: "{{ SSH_AUTHORIZED_KEYS }}"
          freeform_tags: "{'tier': 'spares'}"
          wait: True
        register: result

      - name: Print Result
        debug:
          msg: "{{ result }}"

      - name: Get the facts when instance is already created
        oci_compute_instance_facts:
          compartment_id: "{{ instance_compartment }}"
          display_name: "{{ hostname }}"
          lifecycle_state: "RUNNING"
        register: instances

      - name: Print Instances
        debug:
          msg: "{{ instances }}"

      - set_fact:
          result: "{{ instances.instances[0] }}"

      - name: Print instance details
        debug:
          msg: "Launched a new instance {{ result.id }}"

      - set_fact:
          instance_id: "{{ result.id }}"
        when: instances is defined

      - name: Get the VNIC attachment details of instance
        oci_compute_vnic_attachment_facts:
          compartment_id: "{{ instance_compartment }}"
          instance_id: "{{ instance_id }}"
        register: result

      - name: Get details of the VNIC
        oci_network_vnic_facts:
          id: "{{ result.vnic_attachments[0].vnic_id }}"
        register: result

      - set_fact:
          instance_private_ip: "{{result.vnic.private_ip}}"

      - name: Print the public ip of the newly launched instance
        debug:
          msg: "Private IP of launched instance {{ instance_private_ip }}"

      - name: Wait (upto 10 minutes) for port 22 to become open
        wait_for:
          port: 22
          host: '{{ instance_private_ip }}'
          state: started
          delay: 10
          timeout: 600
        vars:
          ansible_connection: local

      - set_fact:
          ssh_command_with_generated_key: ssh -i "~/.ssh/id_rsa" -o "UserKnownHostsFile=/dev/null" -o "StrictHostKeyChecking=no" opc@{{ instance_private_ip }} uname -a

      - set_fact:
          ssh_command_with_custom_key: ssh -i "/.ssh_/id_rsa" -o "UserKnownHostsFile=/dev/null" -o "StrictHostKeyChecking=no" opc@{{ instance_private_ip }} uname -a

      - name: Attempt a ssh connection to the newly launched instance
        command: "{{ ssh_command_with_custom_key if 'SAMPLE_PUBLIC_SSH_KEY' in ansible_env else ssh_command_with_generated_key }}"
        retries: 3
        delay: 5
        register: result
        until: result.rc == 0

      - name: Print SSH response from launched instance
        debug:
          msg: "SSH response from instance -> {{ result.stdout_lines }}"

      - name: Add host
        add_host:
          name: "{{ hostname }}"
          ansible_ssh_host: "{{ instance_private_ip }}"
- name: Import setup Storage block device playbook
  import_playbook: setup_storage_computenode.yml

- name: Import setup MySQL playbook
  import_playbook: setup_mysql.yml