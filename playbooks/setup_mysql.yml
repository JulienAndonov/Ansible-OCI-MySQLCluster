---

- hosts: localhost
  collections:
    - oracle.oci
  vars_files:
    - ../variables.yml

  tasks:
    - block:
      - name: Get instance details
        oci_compute_instance_facts:
          compartment_id: "{{ instance_compartment }}"
          lifecycle_state: "RUNNING"
          display_name: "{{ hostname }}"
        register: instances_details

      - name: Get facts
        debug:
          msg: "{{ instances_details }}"

      - name: Save instance info
        set_fact:
          instance: '{{ instances_details["instances"] }}'
          instance_ips: '{{instances_details["instances"][0].primary_private_ip}}'

      - name: Add instance(s) to in-memory inventory
        add_host:
          name: '{{ instance_ips }}'


- name: Configure MySQL
  vars:
    ansible_user: opc
    ansible_become: yes
    ansible_become_method: sudo
  vars_files:
    ~/resnap/vars/mysql.yml

  hosts: '{{ hostvars["localhost"]["instance_ips"]}}'
  tasks:
  - block:
    - name: Remove repository (and clean up left-over metadata)
      file:
        path: /etc/yum.repos.d/mysql-ol7.repo
        state: absent

    - name: Create file system
      community.general.filesystem:
        fstype: ext4
        dev: /dev/sdb

    - name: Mount a file system
      mount:
        path: "/var/lib/mysql"
        src: "/dev/sdb"
        fstype: ext4
        state: mounted

    - name: Remove MySQL 8.0 packages
      ansible.builtin.yum:
        name:
          - mysql-community-client-plugins-8*
          - mysql-community-common-8*
          - mysql-community-libs-8*
          - mysql-community-libs-compat-8*
        state: absent

    - name: yum-clean-metadata
      command: yum clean metadata
      args:
        warn: no

    - name: Add repository
      yum_repository:
        name: mysql-ol7-5.7
        baseurl: https://yum.us-phoenix-1.oci.oraclecloud.com/repo/OracleLinux/OL7/MySQL57_community/x86_64/
        description: MySQL 5.7 Repo
        enabled: yes
        gpgcheck: yes
        gpgkey: file:///etc/pki/rpm-gpg/RPM-GPG-KEY-oracle

    - name: Install MySQL & Python Packages
      yum:
        name:
          - mysql-community-server
          - mysql-community-client
          - MySQL-python
        state: present

    - name: Stop MySQL
      service: name=mysqld state=stopped enabled=false

    - name: Change ownership of MySQL Directory
      ansible.builtin.file:
        path: /var/lib/mysql/
        owner: mysql
        group: mysql
        mode: 0755

    - name: Re-create the Data Directory
      ansible.builtin.file:
        path: /var/lib/mysql/mysql5/
        state: absent

    - name: Create MySQL Data directory if it doesn't exist
      ansible.builtin.file:
        path: /var/lib/mysql/mysql5/
        owner: mysql
        group: mysql
        state: directory
        mode: 0755

    - name: Create MySQL Log directory if it doesn't exist
      ansible.builtin.file:
        path: /var/log/mysql/
        state: directory
        owner: mysql
        group: mysql
        mode: '0755'

    - name: Create MySQL Log directory if it doesn't exist
      ansible.builtin.file:
        path: /var/log/mysql/mysql-error.log
        state: touch
        owner: mysql
        group: mysql
        mode: '0640'

    - name: Create MySQL Log file
      ansible.builtin.file:
        path: /var/log/mysql/slow.log
        state: touch
        owner: mysql
        group: mysql
        mode: '0640'


    - name: Stop MySQL
      service: name=mysqld state=stopped enabled=true

    - name: Get last three characters of a string
      shell: |
        hostname | tail -c 4
      register: server_id

    - name: Get Random Number
      set_fact:
        server_mysql_id: "{{100000 | random}}"

    - name: Modify the config file
      shell: |
        echo "
        [mysqld]
        back_log = 128
        binlog_cache_size = 128K
        binlog_row_image = minimal
        character_set_server = utf8
        collation_server = utf8_bin
        datadir = /var/lib/mysql/mysql5/
        expire_logs_days = 10
        innodb_adaptive_hash_index = 0
        innodb_buffer_pool_instances = 4
        innodb_buffer_pool_size = 9216M
        innodb_data_file_path = ibdata1:10M:autoextend
        innodb_data_home_dir = /var/lib/mysql/mysql5/
        innodb_flush_log_at_trx_commit = 2
        innodb_flush_method = O_DIRECT
        innodb_io_capacity = 300
        innodb_lock_wait_timeout = 120
        innodb_log_file_size = 1G
        innodb_log_files_in_group = 2
        innodb_log_group_home_dir = /var/lib/mysql/mysql5/
        innodb_numa_interleave = 1
        innodb_purge_batch_size = 1000
        innodb_purge_threads = 8
        innodb_read_io_threads = 12
        innodb_tmpdir = /var/lib/mysql/mysql5/
        innodb_write_io_threads = 12
        join_buffer_size = 128K
        key_buffer_size = 32M
        local_infile = 0
        log_bin = /var/lib/mysql/mysql5/{{ hostname }}-bin.log
        log_error = /var/log/mysql/mysql-error.log
        log_slave_updates = 1
        log_slow_admin_statements = 1
        lower_case_table_names = 1
        max_allowed_packet = 32M
        max_connect_errors = 50000
        max_connections = 500
        max_heap_table_size = 64M
        max_relay_log_size = 1G
        open_files_limit = 32768
        read_rnd_buffer_size = 2M
        relay_log = mysql-relay-bin
        relay_log_index = mysql-relay-bin.index
        relay_log_info_repository = TABLE
        relay_log_recovery = ON
        replicate_ignore_db = mysql
        replicate_ignore_table = mysql.user
        replicate_ignore_table = mysql.db
        replicate_ignore_table = mysql.host
        replicate_ignore_table = mysql.tables_priv
        replicate_ignore_table = mysql.columns_priv
        replicate_ignore_table = mysql.procs_priv
        replicate_ignore_table = mysql.proxies_priv
        report_host = {{ hostname }}
        server-id = {{ server_mysql_id }}
        skip_name_resolve = 1
        skip_slave_start = 1
        slave_compressed_protocol = 1
        slave_parallel_type = LOGICAL_CLOCK
        slave_parallel_workers = 2
        slave_preserve_commit_order = 1
        slow_query_log = 1
        slow_query_log_file = /var/log/mysql/slow.log
        socket = /var/lib/mysql/mysql5/mysql.sock
        sort_buffer_size = 32M
        sql_mode = PIPES_AS_CONCAT,NO_AUTO_VALUE_ON_ZERO,TRADITIONAL
        sync_binlog = 0
        sysdate_is_now = 1
        table_open_cache = 8192
        thread_cache_size = 128
        tmp_table_size = 64M
        tmpdir = /tmp
        user = mysql" > /etc/my.cnf

    - name: Start MySQL
      service: name=mysqld state=started enabled=true

    - name: Check if a file exist
      stat:
        path: /root/.my.cnf
      register: mysql_file

    - name: Check the root password
      debug:
        msg: "{{ root_password }}"

    - name: Obtain & Change temporal password
      shell: |
          temporal_password=`awk '/A temporary password is generated for/ {a=$0} END{ print a }' /var/log/mysql/mysql-error.log | awk '{print $(NF)}'`
          mysql -uroot -p${temporal_password} --connect-expired-password -S /var/lib/mysql/mysql5/mysql.sock -e "ALTER USER 'root'@'localhost' IDENTIFIED BY '{{ root_password }}';flush privileges; "    
          echo "[client]
          user=root
          password=\"{{ root_password }}\"" > /root/.my.cnf
      when: not mysql_file.stat.exists

    - name: Create mysql replication user
      community.mysql.mysql_user:
        login_user: root
        login_password: "{{ root_password }}"
        login_unix_socket: /var/lib/mysql/mysql5/mysql.sock
        name: replication
        host: '%'
        priv: "*.*:REPLICATION CLIENT, REPLICATION SLAVE"
        password: "{{ root_password }}"